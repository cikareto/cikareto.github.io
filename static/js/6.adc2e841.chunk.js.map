{"version":3,"sources":["containers/About/Header/index.jsx","containers/About/index.jsx"],"names":["Header","texts","keyPress","isAnimated","index","letter","length","style","display","map","width","height","background","position","initial","animate","variants","before","color","opacity","after","transition","type","damping","stiffness","hidden","show","duration","loop","Infinity","className","About","useState","typed","setTyped","setKeyPress","isTypingEnd","setIsTypingEnd","aboutRef","useRef","useEffect","current","focus","Array","from","typeTexts","push","isShowContent","isMobile","id","ref","tabIndex","onKeyDown","event","includes","key","indexOf","cx"],"mappings":"8PAsFeA,G,OAhFA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjBC,EAAa,SAACC,EAAOC,GAAR,OAChBD,IAAUH,EAAMK,QAAuB,MAAbJ,GAAqBA,IAAaG,GAE/D,OACE,qBACEE,MAAO,CACLC,QAAS,QAFb,SAKG,CAAC,IAAD,mBAAQP,IAAOQ,KAAI,SAACJ,EAAQD,GAAT,OAClB,mCACE,eAAC,QAAD,CAEEM,MAAO,OACPC,OAAQ,OACRC,WAAY,GACZL,MAAO,CAAEM,SAAU,YACnBC,QAAS,SACTC,QAASZ,EAAWC,EAAOC,IAAW,QACtCW,SAAU,CACRC,OAAQ,CACNC,MAAO,OACPC,QAAS,IAEXC,MAAO,CACLD,QAAS,EACTP,WAAY,OACZS,WAAY,CACVC,KAAM,SACNC,QAAS,GACTC,UAAW,OAnBnB,UAwBGnB,EACAF,EAAWC,EAAOC,IACjB,cAAC,QAAD,CAEEK,MAAO,UACPC,OAAQ,OACRC,WAAY,GACZL,MAAO,CACLC,QAAS,eACTK,SAAU,YAEZC,QAAS,SACTC,QAASb,IAAaG,GAAU,OAChCW,SAAU,CACRS,OAAQ,CACNb,WAAY,OACZO,QAAS,GAEXO,KAAM,CACJP,QAAS,KAGbE,WAAY,CACVM,SAAU,GACVC,KAAMC,KAtBV,SAyBE,sBACEC,UAAS,gDAA2C1B,GADtD,UAGE,cAAC,IAAD,IACA,8BACc,MAAXC,EAAiB,eAAiB,kBA9BzC,iBACiBD,MA1BdA,Y,OCgEF2B,UA3ED,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEcF,mBAAS,IAFvB,mBAEX9B,EAFW,KAEDiC,EAFC,OAGoBH,oBAAS,GAH7B,mBAGXI,EAHW,KAGEC,EAHF,KAKZC,EAAWC,mBAEjBC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IAEH,IAAMzC,EAAQ0C,MAAMC,KAAK,aACnBC,EAAS,sBAAO5C,GAAP,CAAc,UAE7BA,EAAM6C,KAAK,cAEX,IAaMC,EAAgBX,GAAeY,WAErC,OACE,sBACElB,UAAU,oDACVmB,GAAG,aACHC,IAAKZ,EACLa,SAAS,IACTC,UArBoB,SAACC,GAErBR,EAAUS,SAASD,EAAME,MACzBV,EAAUW,QAAQH,EAAME,OAAStB,EAAM3B,SACtC2B,EAAMqB,SAASD,EAAME,OAEtBpB,EAAYkB,EAAME,KAClBrB,EAAS,GAAD,mBAAKD,GAAL,CAAYoB,EAAME,OAER,UAAdF,EAAME,KAAiBlB,GAAe,KAO5C,UAOGW,YACC,qBAAKlB,UAAU,aAAf,uDAKF,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACGiB,EACC,YAEA,cAAC,EAAD,CAAQ9C,MAAOA,EAAOC,SAAUA,MAGpC,sBAAK4B,UAAW2B,IAAG,gBAAiBV,EAAgB,OAAS,QAA7D,UACE,sHAIA,uBACA,uKAIA,uBACA,qHAKF,qBAAKjB,UAAU,eAAf,SAA+BiB,GAAiB","file":"static/js/6.adc2e841.chunk.js","sourcesContent":["import React from \"react\";\nimport { Frame } from \"framer\";\nimport { ArrowIcon } from \"../../../icons\";\n\nimport \"./header.css\";\n\nconst Header = ({ texts, keyPress }) => {\n  const isAnimated = (index, letter) =>\n    (index === texts.length && keyPress === \">\") || keyPress === letter;\n\n  return (\n    <div\n      style={{\n        display: \"flex\"\n      }}\n    >\n      {[\"\", ...texts].map((letter, index) => (\n        <>\n          <Frame\n            key={index}\n            width={\"auto\"}\n            height={\"2rem\"}\n            background={\"\"}\n            style={{ position: \"relative\" }}\n            initial={\"before\"}\n            animate={isAnimated(index, letter) && \"after\"}\n            variants={{\n              before: {\n                color: \"#fff\",\n                opacity: 0.1,\n              },\n              after: {\n                opacity: 1,\n                background: \"none\",\n                transition: {\n                  type: \"spring\",\n                  damping: 12,\n                  stiffness: 300,\n                },\n              },\n            }}\n          >\n            {letter}\n            {isAnimated(index, letter) && (\n              <Frame\n                key={`cursor-${index}`}\n                width={\"1.25rem\"}\n                height={\"2rem\"}\n                background={\"\"}\n                style={{\n                  display: \"inline-block\",\n                  position: \"absolute\",\n                }}\n                initial={\"hidden\"}\n                animate={keyPress === letter && \"show\"}\n                variants={{\n                  hidden: {\n                    background: \"#fff\",\n                    opacity: 0,\n                  },\n                  show: {\n                    opacity: 0.2,\n                  },\n                }}\n                transition={{\n                  duration: 0.5,\n                  loop: Infinity,\n                }}\n              >\n                <div\n                  className={`cursor_placeholder cursor_placeholder-${index}`}\n                >\n                  <ArrowIcon />\n                  <div>\n                    {letter === \">\" ? \"Press Enter!\" : \"Type this\"}\n                  </div>\n                </div>\n              </Frame>\n            )}\n          </Frame>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport { isMobile } from \"react-device-detect\";\n\nimport Header from \"./Header\";\n\nimport \"./index.css\";\n\nconst About = () => {\n  const [typed, setTyped] = useState([]);\n  const [keyPress, setKeyPress] = useState(\"\");\n  const [isTypingEnd, setIsTypingEnd] = useState(false);\n\n  const aboutRef = useRef();\n\n  useEffect(() => {\n    aboutRef.current.focus();\n  }, []);\n\n  const texts = Array.from(\"<AboutMe>\");\n  const typeTexts = [...texts, \"Enter\"];\n\n  texts.push(\"</AboutMe>\");\n\n  const _handleKeyPress = (event) => {\n    if (\n      typeTexts.includes(event.key) &&\n      typeTexts.indexOf(event.key) === typed.length &&\n      !typed.includes(event.key)\n    ) {\n      setKeyPress(event.key);\n      setTyped([...typed, event.key]);\n\n      if (event.key === \"Enter\") setIsTypingEnd(true);\n    }\n  };\n\n  const isShowContent = isTypingEnd || isMobile;\n\n  return (\n    <div\n      className=\"main align-screen--vertical-centered font-primary\"\n      id=\"main_about\"\n      ref={aboutRef}\n      tabIndex=\"0\"\n      onKeyDown={_handleKeyPress}\n    >\n      {isMobile && (\n        <div className=\"about-info\">\n          open in desktop to get full experience ;)\n        </div>\n      )}\n\n      <div className=\"about\">\n        <div className=\"about-header\">\n          {isShowContent ? (\n            \"<AboutMe>\"\n          ) : (\n            <Header texts={texts} keyPress={keyPress} />\n          )}\n        </div>\n        <div className={cx(\"about-content\", isShowContent ? \"show\" : \"hide\")}>\n          <div>\n            Hi, I'm Salisa Cheawcharnthong, Software Engineer, currently working\n            at Bangkok TH.\n          </div>\n          <br />\n          <div>\n            Ability to think through a problem with the confidence to make a\n            decision. Well-organized, positive, tolerant, and practical person.\n          </div>\n          <br />\n          <div>\n            Enthusiastic to take on new and challenge things to gain more future\n            knowledge.\n          </div>\n        </div>\n        <div className=\"about-header\">{isShowContent && \"</AboutMe>\"}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}